package `fun`.adaptive.auto.api

import `fun`.adaptive.adat.AdatClass

/**
 * @property  backendOnly  Then true, the listener will be called only for changes
 *                         generated by other backends. So, changes made by the local
 *                         frontend won't generate a listener call.
 */
abstract class AutoCollectionListener<A : AdatClass>(
    val backendOnly : Boolean = false
) {

    /**
     * Called when the auto list is initializes the first time.
     */
    open fun onInit(value: Collection<A>) = Unit

    /**
     * Called when an item is added or removed (a structural change).
     */
    open fun onChange(newValue: Collection<A>) = Unit

    /**
     * Called when an item is removed from the list.
     */
    open fun onRemove(item : A) = Unit

    /**
     * Called when an item already in the list changes.
     */
    open fun onChange(newValue: A, oldValue : A?) = Unit

    /**
     * Called when synchronization ended and the list is up-to-date (in respect
     * to the given peer).
     */
    open fun onSyncEnd() = Unit

}