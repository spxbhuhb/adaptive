@startuml

class BackendContext {
    handle : AutoHandle
    frontend : AbstractFrontend
    scope : CoroutineScope
    time : LamportTimestamp
    connectors : List<AutoConnector>
    wireFormatProvider : WireFormatProvider
}

abstract BackendBase {
    context : BackendContext
    modify()
}
BackendBase o-- BackendContext

class PropertyBackend {
    itemId : ItemId
    wireFormat : AdatClassWireFormat
}
PropertyBackend <|-- BackendBase

abstract BackendCollection<A> {
    items : Map<ItemId, PropertyBackend>
    remove()
}
BackendCollection <|-- BackendBase
BackendCollection *-- PropertyBackend

class ListBackend {
    adds : MutableSet<ItemId>
    removes : MutableSet<ItemId>
    add()
}

ListBackend <|-- BackendCollection

class TreeBackend {
    activeRoot : TreeBackendNode
    deletedRoot : TreeBackendNode
    nodes : MutableMap<ItemId,TreeBackendNode>
    add()
    move()
}
TreeBackend <|-- BackendCollection
TreeBackend *-- TreeBackendNode

class TreeBackendNode {
    id : ItemId
    parent: TreeBackendNode?
    children: MutableList<TreeBackendNode>
    edges : MutableMapOf<ItemId, LamportTimestamp>
}

@enduml