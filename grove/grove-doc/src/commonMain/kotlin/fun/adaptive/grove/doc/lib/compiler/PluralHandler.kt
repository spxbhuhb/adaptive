package `fun`.adaptive.grove.doc.lib.compiler

object PluralHandler {

    // Credit: https://github.com/sindresorhus/irregular-plurals/blob/main/irregular-plurals.json
    private val irregularPlurals = mapOf(
        "addendum" to "addenda",
        "aircraft" to "aircraft",
        "alga" to "algae",
        "alumna" to "alumnae",
        "alumnus" to "alumni",
        "alveolus" to "alveoli",
        "amoeba" to "amoebae",
        "analysis" to "analyses",
        "antenna" to "antennae",
        "antithesis" to "antitheses",
        "apex" to "apices",
        "appendix" to "appendices",
        "automaton" to "automata",
        "axis" to "axes",
        "bacillus" to "bacilli",
        "bacterium" to "bacteria",
        "baculum" to "bacula",
        "barracks" to "barracks",
        "basis" to "bases",
        "beau" to "beaux",
        "bison" to "bison",
        "buffalo" to "buffalo",
        "bureau" to "bureaus",
        "cactus" to "cacti",
        "calf" to "calves",
        "carcinoma" to "carcinomata",
        "carp" to "carp",
        "census" to "censuses",
        "chassis" to "chassis",
        "cherub" to "cherubim",
        "child" to "children",
        "château" to "châteaus",
        "cloaca" to "cloacae",
        "cod" to "cod",
        "codex" to "codices",
        "concerto" to "concerti",
        "consortium" to "consortia",
        "corpus" to "corpora",
        "crisis" to "crises",
        "criterion" to "criteria",
        "curriculum" to "curricula",
        "cystoma" to "cystomata",
        "datum" to "data",
        "deer" to "deer",
        "diagnosis" to "diagnoses",
        "die" to "dice",
        "dwarf" to "dwarfs",
        "echo" to "echoes",
        "elf" to "elves",
        "elk" to "elk",
        "ellipsis" to "ellipses",
        "embargo" to "embargoes",
        "emphasis" to "emphases",
        "erratum" to "errata",
        "faux pas" to "faux pas",
        "fez" to "fezes",
        "firmware" to "firmware",
        "fish" to "fish",
        "focus" to "foci",
        "foot" to "feet",
        "formula" to "formulae",
        "fungus" to "fungi",
        "gallows" to "gallows",
        "genus" to "genera",
        "glomerulus" to "glomeruli",
        "goose" to "geese",
        "graffito" to "graffiti",
        "grouse" to "grouse",
        "half" to "halves",
        "hamulus" to "hamuli",
        "hero" to "heroes",
        "hippopotamus" to "hippopotami",
        "hoof" to "hooves",
        "hovercraft" to "hovercraft",
        "hypothesis" to "hypotheses",
        "iliac" to "ilia",
        "incubus" to "incubi",
        "index" to "indices",
        "interstitium" to "interstitia",
        "kakapo" to "kakapo",
        "knife" to "knives",
        "larva" to "larvae",
        "leaf" to "leaves",
        "libretto" to "libretti",
        "life" to "lives",
        "loaf" to "loaves",
        "loculus" to "loculi",
        "locus" to "loci",
        "louse" to "lice",
        "man" to "men",
        "matrix" to "matrices",
        "means" to "means",
        "measles" to "measles",
        "media" to "media",
        "medium" to "media",
        "memorandum" to "memoranda",
        "millennium" to "millennia",
        "minutia" to "minutiae",
        "moose" to "moose",
        "mouse" to "mice",
        "nebula" to "nebulae",
        "nemesis" to "nemeses",
        "neurosis" to "neuroses",
        "news" to "news",
        "nucleolus" to "nucleoli",
        "nucleus" to "nuclei",
        "oasis" to "oases",
        "occiput" to "occipita",
        "offspring" to "offspring",
        "omphalos" to "omphaloi",
        "opus" to "opera",
        "ovum" to "ova",
        "ox" to "oxen",
        "paralysis" to "paralyses",
        "parenthesis" to "parentheses",
        "person" to "people",
        "phenomenon" to "phenomena",
        "phylum" to "phyla",
        "pike" to "pike",
        "polyhedron" to "polyhedra",
        "potato" to "potatoes",
        "primus" to "primi",
        "prognosis" to "prognoses",
        "quiz" to "quizzes",
        "radius" to "radii",
        "referendum" to "referenda",
        "salmon" to "salmon",
        "scarf" to "scarves",
        "scrotum" to "scrota",
        "self" to "selves",
        "seminoma" to "seminomata",
        "series" to "series",
        "sheep" to "sheep",
        "shelf" to "shelves",
        "shrimp" to "shrimp",
        "simulacrum" to "simulacra",
        "soliloquy" to "soliloquies",
        "spacecraft" to "spacecraft",
        "species" to "species",
        "spectrum" to "spectra",
        "squid" to "squid",
        "stimulus" to "stimuli",
        "stratum" to "strata",
        "swine" to "swine",
        "syconium" to "syconia",
        "syllabus" to "syllabi",
        "symposium" to "symposia",
        "synopsis" to "synopses",
        "synthesis" to "syntheses",
        "tableau" to "tableaus",
        "testis" to "testes",
        "that" to "those",
        "thesis" to "theses",
        "thief" to "thieves",
        "this" to "these",
        "thrombus" to "thrombi",
        "tomato" to "tomatoes",
        "tooth" to "teeth",
        "torus" to "tori",
        "trout" to "trout",
        "tuna" to "tuna",
        "umbilicus" to "umbilici",
        "uterus" to "uteri",
        "vertebra" to "vertebrae",
        "vertex" to "vertices",
        "veto" to "vetoes",
        "vita" to "vitae",
        "vortex" to "vortices",
        "watercraft" to "watercraft",
        "wharf" to "wharves",
        "wife" to "wives",
        "wolf" to "wolves",
        "woman" to "women"
    )

    fun lastWordToSingular(text: String): String {
        val lastWord = text.trim().split(" ").last()
        return text.removeSuffix(lastWord) + toSingular(lastWord)
    }
    
    fun toSingular(word: String): String {
        val normalized = word.trim().lowercase()

        irregularPlurals[normalized]?.let { return it }

        return when {
            normalized.endsWith("ies") && normalized.length > 3 ->
                normalized.dropLast(3) + "y"
            normalized.endsWith("ves") && normalized.length > 3 ->
                normalized.dropLast(3) + "f"
            normalized.endsWith("oes") -> // e.g., "heroes" -> "hero"
                normalized.dropLast(2)
            normalized.endsWith("ses") || normalized.endsWith("xes") ||
                normalized.endsWith("zes") || normalized.endsWith("ches") ||
                normalized.endsWith("shes") -> // "boxes" -> "box"
                normalized.dropLast(2)
            normalized.endsWith("s") && normalized.length > 1 ->
                normalized.dropLast(1)
            else -> normalized
        }
    }
}
